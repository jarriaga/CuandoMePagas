<?php

namespace Hydrators;

use Doctrine\ODM\MongoDB\DocumentManager;
use Doctrine\ODM\MongoDB\Mapping\ClassMetadata;
use Doctrine\ODM\MongoDB\Hydrator\HydratorInterface;
use Doctrine\ODM\MongoDB\UnitOfWork;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ODM. DO NOT EDIT THIS FILE.
 */
class AppHttpOdmDocumentsAutoHydrator implements HydratorInterface
{
    private $dm;
    private $unitOfWork;
    private $class;

    public function __construct(DocumentManager $dm, UnitOfWork $uow, ClassMetadata $class)
    {
        $this->dm = $dm;
        $this->unitOfWork = $uow;
        $this->class = $class;
    }

    public function hydrate($document, $data, array $hints = array())
    {
        $hydratedData = array();

        /** @Field(type="id") */
        if (isset($data['_id'])) {
            $value = $data['_id'];
            $return = $value instanceof \MongoId ? (string) $value : $value;
            $this->class->reflFields['id']->setValue($document, $return);
            $hydratedData['id'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['nombre'])) {
            $value = $data['nombre'];
            $return = (string) $value;
            $this->class->reflFields['nombre']->setValue($document, $return);
            $hydratedData['nombre'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['empaque'])) {
            $value = $data['empaque'];
            $return = (string) $value;
            $this->class->reflFields['empaque']->setValue($document, $return);
            $hydratedData['empaque'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['marca'])) {
            $value = $data['marca'];
            $return = (string) $value;
            $this->class->reflFields['marca']->setValue($document, $return);
            $hydratedData['marca'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['descripcion'])) {
            $value = $data['descripcion'];
            $return = (string) $value;
            $this->class->reflFields['descripcion']->setValue($document, $return);
            $hydratedData['descripcion'] = $return;
        }

        /** @Many */
        $mongoData = isset($data['fotos']) ? $data['fotos'] : null;
        $return = new \Doctrine\ODM\MongoDB\PersistentCollection(new \Doctrine\Common\Collections\ArrayCollection(), $this->dm, $this->unitOfWork);
        $return->setHints($hints);
        $return->setOwner($document, $this->class->fieldMappings['fotos']);
        $return->setInitialized(false);
        if ($mongoData) {
            $return->setMongoData($mongoData);
        }
        $this->class->reflFields['fotos']->setValue($document, $return);
        $hydratedData['fotos'] = $return;

        /** @ReferenceOne */
        if (isset($data['usuario'])) {
            $reference = $data['usuario'];
            if (isset($this->class->fieldMappings['usuario']['simple']) && $this->class->fieldMappings['usuario']['simple']) {
                $className = $this->class->fieldMappings['usuario']['targetDocument'];
                $mongoId = $reference;
            } else {
                $className = $this->unitOfWork->getClassNameForAssociation($this->class->fieldMappings['usuario'], $reference);
                $mongoId = $reference['$id'];
            }
            $targetMetadata = $this->dm->getClassMetadata($className);
            $id = $targetMetadata->getPHPIdentifierValue($mongoId);
            $return = $this->dm->getReference($className, $id);
            $this->class->reflFields['usuario']->setValue($document, $return);
            $hydratedData['usuario'] = $return;
        }

        /** @Field(type="date") */
        if (isset($data['createdAt'])) {
            $value = $data['createdAt'];
            if ($value === null) { $return = null; } else { $return = \Doctrine\ODM\MongoDB\Types\DateType::getDateTime($value); }
            $this->class->reflFields['createdAt']->setValue($document, clone $return);
            $hydratedData['createdAt'] = $return;
        }

        /** @Field(type="date") */
        if (isset($data['updatedAt'])) {
            $value = $data['updatedAt'];
            if ($value === null) { $return = null; } else { $return = \Doctrine\ODM\MongoDB\Types\DateType::getDateTime($value); }
            $this->class->reflFields['updatedAt']->setValue($document, clone $return);
            $hydratedData['updatedAt'] = $return;
        }
        return $hydratedData;
    }
}